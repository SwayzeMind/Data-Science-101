{ "cells": [ { "cell_type": "markdown", "metadata": {}, "source": [ "# Р’РµР±РёРЅР°СЂ 2. РџСЂРµРґРѕР±СЂР°Р±РѕС‚РєР° РґР°РЅРЅС‹С…." ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**РџРѕРґРєР»СЋС‡РµРЅРёРµ Р±РёР±Р»РёРѕС‚РµРє Рё СЃРєСЂРёРїС‚РѕРІ**" ] }, { "cell_type": "code", "execution_count": 1, "metadata": {}, "outputs": [], "source": [ "import numpy as np\n", "import pandas as pd" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**РџСѓС‚Рё Рє РґРёСЂРµРєС‚РѕСЂРёСЏРј Рё С„Р°Р№Р»Р°Рј**" ] }, { "cell_type": "code", "execution_count": 2, "metadata": {}, "outputs": [], "source": [ "DATASET_PATH = 'housing.csv'\n", "PREPARED_DATASET_PATH = 'housing_prepared.csv'" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### Р—Р°РіСЂСѓР·РєР° РґР°РЅРЅС‹С…" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**РћРїРёСЃР°РЅРёРµ РґР°С‚Р°СЃРµС‚Р°**\n", "\n", "РЎС‚Р°С‚РёСЃС‚РёС‡РµСЃРєРёРµ РґР°РЅРЅС‹Рµ Рѕ СЂСЏРґРµ РґРѕРјРѕРІ РІ РљР°Р»РёС„РѕСЂРЅРёРё, РѕСЃРЅРѕРІР°РЅРЅС‹Рµ РЅР° РїРµСЂРµРїРёСЃРё 1990 РіРѕРґР°.\n", "\n", "* **longitude** - РґРѕР»РіРѕС‚Р°\n", "* **latitude** - С€РёСЂРѕС‚Р°\n", "* **housing_median_age** - СЃСЂРµРґРЅРёР№ РІРѕР·СЂР°СЃС‚ РґРѕРјР°\n", "* **total_rooms** - РѕР±С‰РµРµ РєРѕР»РёС‡РµСЃС‚РІРѕ РєРѕРјРЅР°С‚\n", "* **total_bedrooms** - РѕР±С‰РµРµ РєРѕР»РёС‡РµСЃС‚РІРѕ СЃРїР°Р»РµРЅ\n", "* **population** - РєРѕР»РёС‡РµСЃС‚РІРѕ РїСЂРѕР¶РёРІР°СЋС‰РёС…\n", "* **households** - РґРѕРјРѕС…РѕР·СЏР№СЃС‚РІР°\n", "* **ocean_proximity** - Р±Р»РёР·РѕСЃС‚СЊ РѕРєРµР°РЅР°\n", "* **median_income** - СЃСЂРµРґРЅРёР№ РґРѕС…РѕРґ\n", "* **median_house_value** - СЃСЂРµРґРЅСЏСЏ СЃС‚РѕРёРјРѕСЃС‚СЊ РґРѕРјР°" ] }, { "cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [], "source": [ "? pd.read_csv" ] }, { "cell_type": "code", "execution_count": 4, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value	ocean_proximity	id
0	-122.23	37.88	41.0	880.0	129.0	322.0	126.0	8.3252	452600.0	NEAR BAY	0
1	-122.22	37.86	21.0	7099.0	1106.0	2401.0	1138.0	8.3014	358500.0	NEAR BAY	1
2	-122.24	37.85	52.0	1467.0	190.0	496.0	177.0	7.2574	352100.0	NEAR BAY	2
3	-122.25	37.85	52.0	1274.0	235.0	558.0	219.0	5.6431	341300.0	NEAR BAY	3
4	-122.25	37.85	52.0	1627.0	280.0	565.0	259.0	3.8462	342200.0	NEAR BAY	4
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms total_bedrooms \\\n", "0 -122.23 37.88 41.0 880.0 129.0 \n", "1 -122.22 37.86 21.0 7099.0 1106.0 \n", "2 -122.24 37.85 52.0 1467.0 190.0 \n", "3 -122.25 37.85 52.0 1274.0 235.0 \n", "4 -122.25 37.85 52.0 1627.0 280.0 \n", "\n", " population households median_income median_house_value ocean_proximity \\\n", "0 322.0 126.0 8.3252 452600.0 NEAR BAY \n", "1 2401.0 1138.0 8.3014 358500.0 NEAR BAY \n", "2 496.0 177.0 7.2574 352100.0 NEAR BAY \n", "3 558.0 219.0 5.6431 341300.0 NEAR BAY \n", "4 565.0 259.0 3.8462 342200.0 NEAR BAY \n", "\n", " id \n", "0 0 \n", "1 1 \n", "2 2 \n", "3 3 \n", "4 4 " ] }, "execution_count": 4, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df = pd.read_csv(DATASET_PATH)\n", "df.head()" ] }, { "cell_type": "code", "execution_count": 5, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "(20640, 11)" ] }, "execution_count": 5, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.shape" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РџСЂРёРІРµРґРµРЅРёРµ С‚РёРїРѕРІ РґР°РЅРЅС‹С…" ] }, { "cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "\n", "RangeIndex: 20640 entries, 0 to 20639\n", "Data columns (total 11 columns):\n", "longitude 20640 non-null float64\n", "latitude 20640 non-null float64\n", "housing_median_age 19918 non-null float64\n", "total_rooms 20640 non-null float64\n", "total_bedrooms 20433 non-null float64\n", "population 20041 non-null float64\n", "households 20640 non-null float64\n", "median_income 20640 non-null float64\n", "median_house_value 20640 non-null float64\n", "ocean_proximity 20640 non-null object\n", "id 20640 non-null int64\n", "dtypes: float64(9), int64(1), object(1)\n", "memory usage: 1.7+ MB\n" ] } ], "source": [ "df.info()" ] }, { "cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "longitude float64\n", "latitude float64\n", "housing_median_age float64\n", "total_rooms float64\n", "total_bedrooms float64\n", "population float64\n", "households float64\n", "median_income float64\n", "median_house_value float64\n", "ocean_proximity object\n", "id int64\n", "dtype: object" ] }, "execution_count": 7, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.dtypes" ] }, { "cell_type": "code", "execution_count": 8, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "dtype('int64')" ] }, "execution_count": 8, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['id'].dtype" ] }, { "cell_type": "code", "execution_count": 9, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "dtype('O')" ] }, "execution_count": 9, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['id'] = df['id'].astype(str)\n", "df['id'].dtype" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РћР±Р·РѕСЂ С†РµР»РµРІРѕР№ РїРµСЂРµРјРµРЅРЅРѕР№" ] }, { "cell_type": "code", "execution_count": 10, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "count 20640.000000\n", "mean 206855.816909\n", "std 115395.615874\n", "min 14999.000000\n", "25% 119600.000000\n", "50% 179700.000000\n", "75% 264725.000000\n", "max 500001.000000\n", "Name: median_house_value, dtype: float64" ] }, "execution_count": 10, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.median_house_value.describe()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РћР±Р·РѕСЂ РєРѕР»РёС‡РµСЃС‚РІРµРЅРЅС‹С… РїРµСЂРµРјРµРЅРЅС‹С…" ] }, { "cell_type": "code", "execution_count": 11, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income
0	-122.23	37.88	41.0	880.0	129.0	322.0	126.0	8.3252
1	-122.22	37.86	21.0	7099.0	1106.0	2401.0	1138.0	8.3014
2	-122.24	37.85	52.0	1467.0	190.0	496.0	177.0	7.2574
3	-122.25	37.85	52.0	1274.0	235.0	558.0	219.0	5.6431
4	-122.25	37.85	52.0	1627.0	280.0	565.0	259.0	3.8462
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms total_bedrooms \\\n", "0 -122.23 37.88 41.0 880.0 129.0 \n", "1 -122.22 37.86 21.0 7099.0 1106.0 \n", "2 -122.24 37.85 52.0 1467.0 190.0 \n", "3 -122.25 37.85 52.0 1274.0 235.0 \n", "4 -122.25 37.85 52.0 1627.0 280.0 \n", "\n", " population households median_income \n", "0 322.0 126.0 8.3252 \n", "1 2401.0 1138.0 8.3014 \n", "2 496.0 177.0 7.2574 \n", "3 558.0 219.0 5.6431 \n", "4 565.0 259.0 3.8462 " ] }, "execution_count": 11, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df_num_features = df.select_dtypes(include=['float64', 'int64']).drop(['median_house_value'],axis=1)#exclude=['object']\n", "df_num_features.head()" ] }, { "cell_type": "code", "execution_count": 12, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income
count	20640.000000	20640.000000	19918.000000	20640.000000	20433.000000	20041.000000	20640.000000	20640.000000
mean	-119.471242	35.036934	28.653630	2635.763081	537.870553	1425.418243	499.539680	3.870671
std	5.041408	94.903955	12.576796	2181.615252	421.385070	1135.185798	382.329753	1.899822
min	-124.350000	-13534.030000	1.000000	2.000000	1.000000	3.000000	1.000000	0.499900
25%	-121.800000	33.930000	18.000000	1447.750000	296.000000	786.000000	280.000000	2.563400
50%	-118.490000	34.260000	29.000000	2127.000000	435.000000	1165.000000	409.000000	3.534800
75%	-118.010000	37.710000	37.000000	3148.000000	647.000000	1726.000000	605.000000	4.743250
max	122.030000	1327.130000	52.000000	39320.000000	6445.000000	35682.000000	6082.000000	15.000100
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms \\\n", "count 20640.000000 20640.000000 19918.000000 20640.000000 \n", "mean -119.471242 35.036934 28.653630 2635.763081 \n", "std 5.041408 94.903955 12.576796 2181.615252 \n", "min -124.350000 -13534.030000 1.000000 2.000000 \n", "25% -121.800000 33.930000 18.000000 1447.750000 \n", "50% -118.490000 34.260000 29.000000 2127.000000 \n", "75% -118.010000 37.710000 37.000000 3148.000000 \n", "max 122.030000 1327.130000 52.000000 39320.000000 \n", "\n", " total_bedrooms population households median_income \n", "count 20433.000000 20041.000000 20640.000000 20640.000000 \n", "mean 537.870553 1425.418243 499.539680 3.870671 \n", "std 421.385070 1135.185798 382.329753 1.899822 \n", "min 1.000000 3.000000 1.000000 0.499900 \n", "25% 296.000000 786.000000 280.000000 2.563400 \n", "50% 435.000000 1165.000000 409.000000 3.534800 \n", "75% 647.000000 1726.000000 605.000000 4.743250 \n", "max 6445.000000 35682.000000 6082.000000 15.000100 " ] }, "execution_count": 12, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df_num_features.describe()" ] }, { "cell_type": "code", "execution_count": 13, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value
count	20640.000000	20640.000000	19918.000000	20640.000000	20433.000000	20041.000000	20640.000000	20640.000000	20640.000000
mean	-119.471242	35.036934	28.653630	2635.763081	537.870553	1425.418243	499.539680	3.870671	206855.816909
std	5.041408	94.903955	12.576796	2181.615252	421.385070	1135.185798	382.329753	1.899822	115395.615874
min	-124.350000	-13534.030000	1.000000	2.000000	1.000000	3.000000	1.000000	0.499900	14999.000000
25%	-121.800000	33.930000	18.000000	1447.750000	296.000000	786.000000	280.000000	2.563400	119600.000000
50%	-118.490000	34.260000	29.000000	2127.000000	435.000000	1165.000000	409.000000	3.534800	179700.000000
75%	-118.010000	37.710000	37.000000	3148.000000	647.000000	1726.000000	605.000000	4.743250	264725.000000
max	122.030000	1327.130000	52.000000	39320.000000	6445.000000	35682.000000	6082.000000	15.000100	500001.000000
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms \\\n", "count 20640.000000 20640.000000 19918.000000 20640.000000 \n", "mean -119.471242 35.036934 28.653630 2635.763081 \n", "std 5.041408 94.903955 12.576796 2181.615252 \n", "min -124.350000 -13534.030000 1.000000 2.000000 \n", "25% -121.800000 33.930000 18.000000 1447.750000 \n", "50% -118.490000 34.260000 29.000000 2127.000000 \n", "75% -118.010000 37.710000 37.000000 3148.000000 \n", "max 122.030000 1327.130000 52.000000 39320.000000 \n", "\n", " total_bedrooms population households median_income \\\n", "count 20433.000000 20041.000000 20640.000000 20640.000000 \n", "mean 537.870553 1425.418243 499.539680 3.870671 \n", "std 421.385070 1135.185798 382.329753 1.899822 \n", "min 1.000000 3.000000 1.000000 0.499900 \n", "25% 296.000000 786.000000 280.000000 2.563400 \n", "50% 435.000000 1165.000000 409.000000 3.534800 \n", "75% 647.000000 1726.000000 605.000000 4.743250 \n", "max 6445.000000 35682.000000 6082.000000 15.000100 \n", "\n", " median_house_value \n", "count 20640.000000 \n", "mean 206855.816909 \n", "std 115395.615874 \n", "min 14999.000000 \n", "25% 119600.000000 \n", "50% 179700.000000 \n", "75% 264725.000000 \n", "max 500001.000000 " ] }, "execution_count": 13, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.describe()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РћР±Р·РѕСЂ РЅРѕРјРёРЅР°С‚РёРІРЅС‹С… РїРµСЂРµРјРµРЅРЅС‹С…" ] }, { "cell_type": "code", "execution_count": 14, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
ocean_proximity	id
0	NEAR BAY	0
1	NEAR BAY	1
2	NEAR BAY	2
3	NEAR BAY	3
4	NEAR BAY	4
\n", "
" ], "text/plain": [ " ocean_proximity id\n", "0 NEAR BAY 0\n", "1 NEAR BAY 1\n", "2 NEAR BAY 2\n", "3 NEAR BAY 3\n", "4 NEAR BAY 4" ] }, "execution_count": 14, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df_obj_features = df.select_dtypes(include='object')\n", "df_obj_features.head()" ] }, { "cell_type": "code", "execution_count": 15, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "<1H OCEAN 9127\n", "INLAND 6542\n", "NEAR OCEAN 2655\n", "NEAR BAY 2288\n", "- 23\n", "ISLAND 5\n", "Name: ocean_proximity, dtype: int64" ] }, "execution_count": 15, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['ocean_proximity'].value_counts()" ] }, { "cell_type": "code", "execution_count": 16, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "array(['NEAR BAY', '<1H OCEAN', 'INLAND', '-', 'NEAR OCEAN', 'ISLAND'],\n", " dtype=object)" ] }, "execution_count": 16, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['ocean_proximity'].unique()" ] }, { "cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "6" ] }, "execution_count": 17, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['ocean_proximity'].nunique()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РћР±СЂР°Р±РѕС‚РєР° РїСЂРѕРїСѓСЃРєРѕРІ" ] }, { "cell_type": "code", "execution_count": 18, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "longitude 0\n", "latitude 0\n", "housing_median_age 722\n", "total_rooms 0\n", "total_bedrooms 207\n", "population 599\n", "households 0\n", "median_income 0\n", "median_house_value 0\n", "ocean_proximity 0\n", "id 0\n", "dtype: int64" ] }, "execution_count": 18, "metadata": {}, "output_type": "execute_result" } ], "source": [ "len(df) - df.count()" ] }, { "cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "longitude 0\n", "latitude 0\n", "housing_median_age 722\n", "total_rooms 0\n", "total_bedrooms 207\n", "population 599\n", "households 0\n", "median_income 0\n", "median_house_value 0\n", "ocean_proximity 0\n", "id 0\n", "dtype: int64" ] }, "execution_count": 19, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.isnull().sum()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**housing_median_age**" ] }, { "cell_type": "code", "execution_count": 20, "metadata": {}, "outputs": [], "source": [ "df.loc[df['housing_median_age'].isnull(), 'housing_median_age'] = df['housing_median_age'].median()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**total_bedrooms**" ] }, { "cell_type": "code", "execution_count": 21, "metadata": {}, "outputs": [], "source": [ "df.loc[df['total_bedrooms'].isnull(), 'total_bedrooms'] = df['total_bedrooms'].median()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**population**" ] }, { "cell_type": "code", "execution_count": 22, "metadata": {}, "outputs": [], "source": [ "df.loc[df['population'].isnull(), 'population'] = df['population'].median()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**ocean_proximity**" ] }, { "cell_type": "code", "execution_count": 23, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "'<1H OCEAN'" ] }, "execution_count": 23, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['ocean_proximity'].mode()[0]" ] }, { "cell_type": "code", "execution_count": 24, "metadata": {}, "outputs": [], "source": [ "df.replace({'ocean_proximity': {'-':df['ocean_proximity'].mode()[0]}}, inplace=True)\n", "#df=df.replace({'ocean_proximity': {'-':df['ocean_proximity'].mode()[0]}}) - СЌРєРІРёРІР°Р»РµРЅС‚РЅРѕ РїСЂРµРґС‹РґСѓС‰РµР№ СЃС‚СЂРѕРєРµ" ] }, { "cell_type": "code", "execution_count": 25, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "<1H OCEAN 9150\n", "INLAND 6542\n", "NEAR OCEAN 2655\n", "NEAR BAY 2288\n", "ISLAND 5\n", "Name: ocean_proximity, dtype: int64" ] }, "execution_count": 25, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df['ocean_proximity'].value_counts()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РћР±СЂР°Р±РѕС‚РєР° РІС‹Р±СЂРѕСЃРѕРІ" ] }, { "cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value
count	20640.000000	20640.000000	20640.000000	20640.000000	20640.000000	20640.000000	20640.000000	20640.000000	20640.000000
mean	-119.471242	35.036934	28.665746	2635.763081	536.838857	1417.860562	499.539680	3.870671	206855.816909
std	5.041408	94.903955	12.355019	2181.615252	419.391878	1119.445348	382.329753	1.899822	115395.615874
min	-124.350000	-13534.030000	1.000000	2.000000	1.000000	3.000000	1.000000	0.499900	14999.000000
25%	-121.800000	33.930000	19.000000	1447.750000	297.000000	797.000000	280.000000	2.563400	119600.000000
50%	-118.490000	34.260000	29.000000	2127.000000	435.000000	1165.000000	409.000000	3.534800	179700.000000
75%	-118.010000	37.710000	37.000000	3148.000000	643.250000	1701.000000	605.000000	4.743250	264725.000000
max	122.030000	1327.130000	52.000000	39320.000000	6445.000000	35682.000000	6082.000000	15.000100	500001.000000
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms \\\n", "count 20640.000000 20640.000000 20640.000000 20640.000000 \n", "mean -119.471242 35.036934 28.665746 2635.763081 \n", "std 5.041408 94.903955 12.355019 2181.615252 \n", "min -124.350000 -13534.030000 1.000000 2.000000 \n", "25% -121.800000 33.930000 19.000000 1447.750000 \n", "50% -118.490000 34.260000 29.000000 2127.000000 \n", "75% -118.010000 37.710000 37.000000 3148.000000 \n", "max 122.030000 1327.130000 52.000000 39320.000000 \n", "\n", " total_bedrooms population households median_income \\\n", "count 20640.000000 20640.000000 20640.000000 20640.000000 \n", "mean 536.838857 1417.860562 499.539680 3.870671 \n", "std 419.391878 1119.445348 382.329753 1.899822 \n", "min 1.000000 3.000000 1.000000 0.499900 \n", "25% 297.000000 797.000000 280.000000 2.563400 \n", "50% 435.000000 1165.000000 409.000000 3.534800 \n", "75% 643.250000 1701.000000 605.000000 4.743250 \n", "max 6445.000000 35682.000000 6082.000000 15.000100 \n", "\n", " median_house_value \n", "count 20640.000000 \n", "mean 206855.816909 \n", "std 115395.615874 \n", "min 14999.000000 \n", "25% 119600.000000 \n", "50% 179700.000000 \n", "75% 264725.000000 \n", "max 500001.000000 " ] }, "execution_count": 26, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.describe()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**longitude**" ] }, { "cell_type": "code", "execution_count": 27, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value	ocean_proximity	id
3479	118.51	34.29	29.0	1287.0	194.0	525.0	187.0	6.4171	319300.0	<1H OCEAN	3479
5904	118.43	34.29	39.0	1769.0	410.0	1499.0	390.0	3.1212	153500.0	<1H OCEAN	5904
8405	118.36	33.93	40.0	1625.0	500.0	2036.0	476.0	2.6298	156500.0	<1H OCEAN	8405
8636	118.41	33.88	43.0	2492.0	449.0	1033.0	437.0	7.9614	500001.0	<1H OCEAN	8636
13051	121.29	38.61	17.0	13553.0	2474.0	6544.0	2359.0	3.9727	132700.0	INLAND	13051
15263	117.27	33.02	21.0	2144.0	340.0	928.0	344.0	5.7980	286100.0	NEAR OCEAN	15263
17085	0.00	37.47	33.0	1266.0	415.0	1991.0	334.0	2.9200	202800.0	NEAR OCEAN	17085
17359	0.00	34.88	4.0	3680.0	559.0	1678.0	569.0	5.0639	201700.0	<1H OCEAN	17359
18551	122.03	36.96	28.0	1607.0	421.0	926.0	385.0	2.4250	216100.0	NEAR OCEAN	18551
19423	0.00	37.69	5.0	9601.0	1639.0	4449.0	1575.0	4.5332	195500.0	INLAND	19423
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms total_bedrooms \\\n", "3479 118.51 34.29 29.0 1287.0 194.0 \n", "5904 118.43 34.29 39.0 1769.0 410.0 \n", "8405 118.36 33.93 40.0 1625.0 500.0 \n", "8636 118.41 33.88 43.0 2492.0 449.0 \n", "13051 121.29 38.61 17.0 13553.0 2474.0 \n", "15263 117.27 33.02 21.0 2144.0 340.0 \n", "17085 0.00 37.47 33.0 1266.0 415.0 \n", "17359 0.00 34.88 4.0 3680.0 559.0 \n", "18551 122.03 36.96 28.0 1607.0 421.0 \n", "19423 0.00 37.69 5.0 9601.0 1639.0 \n", "\n", " population households median_income median_house_value \\\n", "3479 525.0 187.0 6.4171 319300.0 \n", "5904 1499.0 390.0 3.1212 153500.0 \n", "8405 2036.0 476.0 2.6298 156500.0 \n", "8636 1033.0 437.0 7.9614 500001.0 \n", "13051 6544.0 2359.0 3.9727 132700.0 \n", "15263 928.0 344.0 5.7980 286100.0 \n", "17085 1991.0 334.0 2.9200 202800.0 \n", "17359 1678.0 569.0 5.0639 201700.0 \n", "18551 926.0 385.0 2.4250 216100.0 \n", "19423 4449.0 1575.0 4.5332 195500.0 \n", "\n", " ocean_proximity id \n", "3479 <1H OCEAN 3479 \n", "5904 <1H OCEAN 5904 \n", "8405 <1H OCEAN 8405 \n", "8636 <1H OCEAN 8636 \n", "13051 INLAND 13051 \n", "15263 NEAR OCEAN 15263 \n", "17085 NEAR OCEAN 17085 \n", "17359 <1H OCEAN 17359 \n", "18551 NEAR OCEAN 18551 \n", "19423 INLAND 19423 " ] }, "execution_count": 27, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df[df['longitude'] >= 0]" ] }, { "cell_type": "code", "execution_count": 28, "metadata": {}, "outputs": [], "source": [ "df.loc[df['longitude'] > 0, 'longitude'] = df.loc[df['longitude'] > 0, 'longitude'] * -1" ] }, { "cell_type": "code", "execution_count": 29, "metadata": {}, "outputs": [], "source": [ "df.loc[df['longitude'] == 0, 'longitude'] = df['longitude'].median()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**latitude**" ] }, { "cell_type": "code", "execution_count": 30, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "8283 -118.13\n", "12772 -121.42\n", "Name: longitude, dtype: float64" ] }, "execution_count": 30, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df[(df['latitude'] <= 0) | (df['latitude'] > 50)]['longitude']\n", "#df.loc[(df['latitude'] <= 0) | (df['latitude'] > 50),'longitude'] - СЌРєРІРёРІР°Р»РµРЅС‚РЅРѕ РїСЂРµРґС‹РґСѓС‰РµР№ СЃС‚СЂРѕРєРµ" ] }, { "cell_type": "code", "execution_count": 31, "metadata": {}, "outputs": [], "source": [ "df.loc[(df['latitude'] <= 0) | (df['latitude'] > 50), 'latitude'] = df['latitude'].median()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РРЅС‚РµСЂРєРІР°СЂС‚РёР°Р»СЊРЅС‹Р№ СЂР°Р·РјР°С…" ] }, { "cell_type": "code", "execution_count": 32, "metadata": {}, "outputs": [ { "data": { "text/plain": [ "count 20640.000000\n", "mean 2635.763081\n", "std 2181.615252\n", "min 2.000000\n", "25% 1447.750000\n", "50% 2127.000000\n", "75% 3148.000000\n", "max 39320.000000\n", "Name: total_rooms, dtype: float64" ] }, "execution_count": 32, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.total_rooms.describe()" ] }, { "cell_type": "code", "execution_count": 33, "metadata": {}, "outputs": [], "source": [ "IQ=df.total_rooms.describe()['75%']-df.total_rooms.describe()['25%']\n", "low_border=df.total_rooms.describe()['25%']-IQ*1.5\n", "high_border=df.total_rooms.describe()['75%']+IQ*1.5" ] }, { "cell_type": "code", "execution_count": 34, "metadata": {}, "outputs": [ { "name": "stdout", "output_type": "stream", "text": [ "1700.25 -1102.625 5698.375\n" ] } ], "source": [ "print(IQ,low_border,high_border)" ] }, { "cell_type": "code", "execution_count": 35, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value	ocean_proximity	id
1	-122.22	37.86	21.0	7099.0	1106.0	2401.0	1138.0	8.3014	358500.0	NEAR BAY	1
101	-122.25	37.81	28.0	5806.0	1603.0	2563.0	1497.0	3.2177	273400.0	NEAR BAY	101
104	-122.26	37.81	34.0	5871.0	1914.0	2689.0	1789.0	2.8406	335700.0	NEAR BAY	104
185	-122.23	37.79	43.0	5963.0	1344.0	4367.0	1231.0	2.1917	112800.0	NEAR BAY	185
283	-122.16	37.79	22.0	12842.0	2048.0	4985.0	1967.0	5.9849	371000.0	NEAR BAY	283
508	-122.30	37.84	14.0	7355.0	2408.0	3100.0	2051.0	4.0018	143800.0	NEAR BAY	508
568	-122.24	37.73	21.0	7031.0	1249.0	2930.0	1235.0	4.5213	228400.0	NEAR BAY	568
570	-122.24	37.72	5.0	18634.0	2885.0	7427.0	2718.0	7.6110	350700.0	NEAR BAY	570
571	-122.27	37.73	29.0	5785.0	1379.0	2973.0	1312.0	3.2689	231000.0	NEAR BAY	571
573	-122.27	37.74	28.0	6909.0	1554.0	2974.0	1484.0	3.6875	353900.0	NEAR BAY	573
576	-122.06	37.77	12.0	14316.0	2045.0	5781.0	2007.0	7.2634	341600.0	NEAR BAY	576
592	-122.10	37.71	27.0	6740.0	1073.0	2723.0	1035.0	5.2131	252500.0	NEAR BAY	592
605	-122.07	37.69	31.0	5914.0	1309.0	2999.0	1295.0	3.0964	190500.0	NEAR BAY	605
654	-122.15	37.71	18.0	5778.0	1526.0	2441.0	1352.0	3.1682	202700.0	NEAR BAY	654
706	-122.04	37.65	10.0	8299.0	1326.0	3827.0	1288.0	6.2579	315500.0	NEAR BAY	706
707	-122.05	37.68	23.0	7518.0	1279.0	3827.0	1294.0	5.1701	216800.0	NEAR BAY	707
780	-122.10	37.63	18.0	9963.0	2031.0	5613.0	1946.0	3.8171	187200.0	NEAR BAY	780
799	-122.07	37.64	22.0	5861.0	1516.0	5436.0	1463.0	2.5158	134900.0	NEAR BAY	799
821	-122.06	37.63	12.0	6711.0	1374.0	3388.0	1289.0	3.8625	208900.0	NEAR BAY	821
850	-122.05	37.59	15.0	6243.0	1273.0	3163.0	1274.0	3.7462	212500.0	NEAR BAY	850
864	-122.01	37.57	14.0	16199.0	2993.0	1165.0	2847.0	5.8322	281800.0	NEAR BAY	864
865	-122.04	37.58	14.0	14917.0	2708.0	8012.0	2606.0	5.6277	269800.0	NEAR BAY	865
866	-122.04	37.57	12.0	5719.0	1064.0	3436.0	1057.0	5.2879	231200.0	NEAR BAY	866
867	-122.07	37.57	8.0	8647.0	1407.0	5019.0	1379.0	6.5615	318300.0	NEAR BAY	867
868	-122.06	37.58	15.0	8112.0	1376.0	4576.0	1348.0	5.6758	253400.0	NEAR BAY	868
869	-122.05	37.57	7.0	10648.0	1818.0	6075.0	1797.0	6.1047	278200.0	NEAR BAY	869
871	-122.07	37.52	3.0	14014.0	2861.0	7205.0	2753.0	6.0824	273500.0	NEAR BAY	871
875	-122.03	37.56	24.0	8444.0	1492.0	4446.0	1491.0	4.6978	240300.0	NEAR BAY	875
881	-121.99	37.56	20.0	6462.0	1294.0	3288.0	1235.0	4.3393	231200.0	<1H OCEAN	881
883	-121.97	37.56	13.0	8918.0	1823.0	4518.0	1772.0	4.8052	254000.0	<1H OCEAN	883
...	...	...	...	...	...	...	...	...	...	...	...
20342	-119.04	34.23	21.0	9807.0	1614.0	4199.0	1554.0	5.0145	246600.0	<1H OCEAN	20342
20354	-118.97	34.18	18.0	7338.0	1020.0	3419.0	1058.0	7.0242	293100.0	<1H OCEAN	20354
20374	-118.84	34.16	18.0	6075.0	1056.0	2571.0	1018.0	5.2200	399400.0	<1H OCEAN	20374
20388	-118.90	34.20	16.0	6510.0	817.0	2304.0	778.0	7.9943	452100.0	<1H OCEAN	20388
20412	-118.88	34.19	16.0	7268.0	1729.0	3232.0	1653.0	3.3703	228700.0	<1H OCEAN	20412
20414	-118.85	34.18	11.0	5873.0	1455.0	1165.0	1365.0	3.5504	173800.0	<1H OCEAN	20414
20424	-118.75	34.18	4.0	16704.0	2704.0	6187.0	2207.0	6.6122	357600.0	NEAR OCEAN	20424
20425	-118.75	34.17	18.0	6217.0	858.0	2703.0	834.0	6.8075	325900.0	NEAR OCEAN	20425
20427	-118.80	34.19	4.0	15572.0	2222.0	5495.0	2152.0	8.6499	500001.0	<1H OCEAN	20427
20428	-118.83	34.23	29.0	8803.0	1114.0	3385.0	1010.0	8.7288	425800.0	<1H OCEAN	20428
20437	-118.81	34.25	4.0	9147.0	1827.0	3950.0	1661.0	5.7160	320800.0	<1H OCEAN	20437
20440	-118.77	34.24	6.0	16222.0	2309.0	6700.0	2080.0	6.4963	308100.0	<1H OCEAN	20440
20445	-118.83	34.33	6.0	6679.0	1164.0	3196.0	1157.0	5.4493	242600.0	<1H OCEAN	20445
20450	-118.91	34.28	6.0	6106.0	1134.0	3246.0	1062.0	5.2206	280200.0	<1H OCEAN	20450
20451	-118.90	34.26	5.0	25187.0	3521.0	11956.0	3478.0	6.9712	321300.0	<1H OCEAN	20451
20486	-118.68	34.28	17.0	6488.0	1102.0	3199.0	1070.0	5.0962	238000.0	<1H OCEAN	20486
20487	-118.67	34.30	5.0	6123.0	825.0	2440.0	736.0	7.9013	393000.0	<1H OCEAN	20487
20488	-118.68	34.28	5.0	6150.0	1265.0	3188.0	1266.0	4.7034	223000.0	<1H OCEAN	20488
20507	-121.52	38.59	35.0	6418.0	1545.0	3814.0	1496.0	1.6647	69100.0	INLAND	20507
20524	-121.55	38.55	10.0	6227.0	1164.0	2909.0	1077.0	4.1060	115900.0	INLAND	20524
20529	-121.78	38.55	12.0	10509.0	2186.0	5633.0	2138.0	2.9605	204300.0	INLAND	20529
20530	-121.76	38.57	11.0	15018.0	3008.0	7984.0	2962.0	3.1371	201800.0	INLAND	20530
20533	-121.67	38.54	13.0	6141.0	1019.0	2553.0	967.0	4.2432	326500.0	INLAND	20533
20539	-121.71	38.56	20.0	8627.0	1516.0	4071.0	1466.0	4.2198	164100.0	INLAND	20539
20541	-121.70	38.54	13.0	6819.0	1158.0	2828.0	1115.0	4.6225	226500.0	INLAND	20541
20543	-121.74	38.55	33.0	6861.0	1820.0	3717.0	1767.0	1.7311	182600.0	INLAND	20543
20544	-121.76	38.55	23.0	8800.0	1857.0	6330.0	1832.0	2.0650	219400.0	INLAND	20544
20563	-121.75	38.67	9.0	12139.0	2640.0	6837.0	2358.0	3.1250	132500.0	INLAND	20563
20567	-121.79	38.66	15.0	6809.0	1052.0	3060.0	1060.0	5.3064	165000.0	INLAND	20567
20629	-121.39	39.12	28.0	10035.0	1856.0	6912.0	1818.0	2.0943	108300.0	INLAND	20629
\n", "
1287 rows Г— 11 columns

\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms total_bedrooms \\\n", "1 -122.22 37.86 21.0 7099.0 1106.0 \n", "101 -122.25 37.81 28.0 5806.0 1603.0 \n", "104 -122.26 37.81 34.0 5871.0 1914.0 \n", "185 -122.23 37.79 43.0 5963.0 1344.0 \n", "283 -122.16 37.79 22.0 12842.0 2048.0 \n", "508 -122.30 37.84 14.0 7355.0 2408.0 \n", "568 -122.24 37.73 21.0 7031.0 1249.0 \n", "570 -122.24 37.72 5.0 18634.0 2885.0 \n", "571 -122.27 37.73 29.0 5785.0 1379.0 \n", "573 -122.27 37.74 28.0 6909.0 1554.0 \n", "576 -122.06 37.77 12.0 14316.0 2045.0 \n", "592 -122.10 37.71 27.0 6740.0 1073.0 \n", "605 -122.07 37.69 31.0 5914.0 1309.0 \n", "654 -122.15 37.71 18.0 5778.0 1526.0 \n", "706 -122.04 37.65 10.0 8299.0 1326.0 \n", "707 -122.05 37.68 23.0 7518.0 1279.0 \n", "780 -122.10 37.63 18.0 9963.0 2031.0 \n", "799 -122.07 37.64 22.0 5861.0 1516.0 \n", "821 -122.06 37.63 12.0 6711.0 1374.0 \n", "850 -122.05 37.59 15.0 6243.0 1273.0 \n", "864 -122.01 37.57 14.0 16199.0 2993.0 \n", "865 -122.04 37.58 14.0 14917.0 2708.0 \n", "866 -122.04 37.57 12.0 5719.0 1064.0 \n", "867 -122.07 37.57 8.0 8647.0 1407.0 \n", "868 -122.06 37.58 15.0 8112.0 1376.0 \n", "869 -122.05 37.57 7.0 10648.0 1818.0 \n", "871 -122.07 37.52 3.0 14014.0 2861.0 \n", "875 -122.03 37.56 24.0 8444.0 1492.0 \n", "881 -121.99 37.56 20.0 6462.0 1294.0 \n", "883 -121.97 37.56 13.0 8918.0 1823.0 \n", "... ... ... ... ... ... \n", "20342 -119.04 34.23 21.0 9807.0 1614.0 \n", "20354 -118.97 34.18 18.0 7338.0 1020.0 \n", "20374 -118.84 34.16 18.0 6075.0 1056.0 \n", "20388 -118.90 34.20 16.0 6510.0 817.0 \n", "20412 -118.88 34.19 16.0 7268.0 1729.0 \n", "20414 -118.85 34.18 11.0 5873.0 1455.0 \n", "20424 -118.75 34.18 4.0 16704.0 2704.0 \n", "20425 -118.75 34.17 18.0 6217.0 858.0 \n", "20427 -118.80 34.19 4.0 15572.0 2222.0 \n", "20428 -118.83 34.23 29.0 8803.0 1114.0 \n", "20437 -118.81 34.25 4.0 9147.0 1827.0 \n", "20440 -118.77 34.24 6.0 16222.0 2309.0 \n", "20445 -118.83 34.33 6.0 6679.0 1164.0 \n", "20450 -118.91 34.28 6.0 6106.0 1134.0 \n", "20451 -118.90 34.26 5.0 25187.0 3521.0 \n", "20486 -118.68 34.28 17.0 6488.0 1102.0 \n", "20487 -118.67 34.30 5.0 6123.0 825.0 \n", "20488 -118.68 34.28 5.0 6150.0 1265.0 \n", "20507 -121.52 38.59 35.0 6418.0 1545.0 \n", "20524 -121.55 38.55 10.0 6227.0 1164.0 \n", "20529 -121.78 38.55 12.0 10509.0 2186.0 \n", "20530 -121.76 38.57 11.0 15018.0 3008.0 \n", "20533 -121.67 38.54 13.0 6141.0 1019.0 \n", "20539 -121.71 38.56 20.0 8627.0 1516.0 \n", "20541 -121.70 38.54 13.0 6819.0 1158.0 \n", "20543 -121.74 38.55 33.0 6861.0 1820.0 \n", "20544 -121.76 38.55 23.0 8800.0 1857.0 \n", "20563 -121.75 38.67 9.0 12139.0 2640.0 \n", "20567 -121.79 38.66 15.0 6809.0 1052.0 \n", "20629 -121.39 39.12 28.0 10035.0 1856.0 \n", "\n", " population households median_income median_house_value \\\n", "1 2401.0 1138.0 8.3014 358500.0 \n", "101 2563.0 1497.0 3.2177 273400.0 \n", "104 2689.0 1789.0 2.8406 335700.0 \n", "185 4367.0 1231.0 2.1917 112800.0 \n", "283 4985.0 1967.0 5.9849 371000.0 \n", "508 3100.0 2051.0 4.0018 143800.0 \n", "568 2930.0 1235.0 4.5213 228400.0 \n", "570 7427.0 2718.0 7.6110 350700.0 \n", "571 2973.0 1312.0 3.2689 231000.0 \n", "573 2974.0 1484.0 3.6875 353900.0 \n", "576 5781.0 2007.0 7.2634 341600.0 \n", "592 2723.0 1035.0 5.2131 252500.0 \n", "605 2999.0 1295.0 3.0964 190500.0 \n", "654 2441.0 1352.0 3.1682 202700.0 \n", "706 3827.0 1288.0 6.2579 315500.0 \n", "707 3827.0 1294.0 5.1701 216800.0 \n", "780 5613.0 1946.0 3.8171 187200.0 \n", "799 5436.0 1463.0 2.5158 134900.0 \n", "821 3388.0 1289.0 3.8625 208900.0 \n", "850 3163.0 1274.0 3.7462 212500.0 \n", "864 1165.0 2847.0 5.8322 281800.0 \n", "865 8012.0 2606.0 5.6277 269800.0 \n", "866 3436.0 1057.0 5.2879 231200.0 \n", "867 5019.0 1379.0 6.5615 318300.0 \n", "868 4576.0 1348.0 5.6758 253400.0 \n", "869 6075.0 1797.0 6.1047 278200.0 \n", "871 7205.0 2753.0 6.0824 273500.0 \n", "875 4446.0 1491.0 4.6978 240300.0 \n", "881 3288.0 1235.0 4.3393 231200.0 \n", "883 4518.0 1772.0 4.8052 254000.0 \n", "... ... ... ... ... \n", "20342 4199.0 1554.0 5.0145 246600.0 \n", "20354 3419.0 1058.0 7.0242 293100.0 \n", "20374 2571.0 1018.0 5.2200 399400.0 \n", "20388 2304.0 778.0 7.9943 452100.0 \n", "20412 3232.0 1653.0 3.3703 228700.0 \n", "20414 1165.0 1365.0 3.5504 173800.0 \n", "20424 6187.0 2207.0 6.6122 357600.0 \n", "20425 2703.0 834.0 6.8075 325900.0 \n", "20427 5495.0 2152.0 8.6499 500001.0 \n", "20428 3385.0 1010.0 8.7288 425800.0 \n", "20437 3950.0 1661.0 5.7160 320800.0 \n", "20440 6700.0 2080.0 6.4963 308100.0 \n", "20445 3196.0 1157.0 5.4493 242600.0 \n", "20450 3246.0 1062.0 5.2206 280200.0 \n", "20451 11956.0 3478.0 6.9712 321300.0 \n", "20486 3199.0 1070.0 5.0962 238000.0 \n", "20487 2440.0 736.0 7.9013 393000.0 \n", "20488 3188.0 1266.0 4.7034 223000.0 \n", "20507 3814.0 1496.0 1.6647 69100.0 \n", "20524 2909.0 1077.0 4.1060 115900.0 \n", "20529 5633.0 2138.0 2.9605 204300.0 \n", "20530 7984.0 2962.0 3.1371 201800.0 \n", "20533 2553.0 967.0 4.2432 326500.0 \n", "20539 4071.0 1466.0 4.2198 164100.0 \n", "20541 2828.0 1115.0 4.6225 226500.0 \n", "20543 3717.0 1767.0 1.7311 182600.0 \n", "20544 6330.0 1832.0 2.0650 219400.0 \n", "20563 6837.0 2358.0 3.1250 132500.0 \n", "20567 3060.0 1060.0 5.3064 165000.0 \n", "20629 6912.0 1818.0 2.0943 108300.0 \n", "\n", " ocean_proximity id \n", "1 NEAR BAY 1 \n", "101 NEAR BAY 101 \n", "104 NEAR BAY 104 \n", "185 NEAR BAY 185 \n", "283 NEAR BAY 283 \n", "508 NEAR BAY 508 \n", "568 NEAR BAY 568 \n", "570 NEAR BAY 570 \n", "571 NEAR BAY 571 \n", "573 NEAR BAY 573 \n", "576 NEAR BAY 576 \n", "592 NEAR BAY 592 \n", "605 NEAR BAY 605 \n", "654 NEAR BAY 654 \n", "706 NEAR BAY 706 \n", "707 NEAR BAY 707 \n", "780 NEAR BAY 780 \n", "799 NEAR BAY 799 \n", "821 NEAR BAY 821 \n", "850 NEAR BAY 850 \n", "864 NEAR BAY 864 \n", "865 NEAR BAY 865 \n", "866 NEAR BAY 866 \n", "867 NEAR BAY 867 \n", "868 NEAR BAY 868 \n", "869 NEAR BAY 869 \n", "871 NEAR BAY 871 \n", "875 NEAR BAY 875 \n", "881 <1H OCEAN 881 \n", "883 <1H OCEAN 883 \n", "... ... ... \n", "20342 <1H OCEAN 20342 \n", "20354 <1H OCEAN 20354 \n", "20374 <1H OCEAN 20374 \n", "20388 <1H OCEAN 20388 \n", "20412 <1H OCEAN 20412 \n", "20414 <1H OCEAN 20414 \n", "20424 NEAR OCEAN 20424 \n", "20425 NEAR OCEAN 20425 \n", "20427 <1H OCEAN 20427 \n", "20428 <1H OCEAN 20428 \n", "20437 <1H OCEAN 20437 \n", "20440 <1H OCEAN 20440 \n", "20445 <1H OCEAN 20445 \n", "20450 <1H OCEAN 20450 \n", "20451 <1H OCEAN 20451 \n", "20486 <1H OCEAN 20486 \n", "20487 <1H OCEAN 20487 \n", "20488 <1H OCEAN 20488 \n", "20507 INLAND 20507 \n", "20524 INLAND 20524 \n", "20529 INLAND 20529 \n", "20530 INLAND 20530 \n", "20533 INLAND 20533 \n", "20539 INLAND 20539 \n", "20541 INLAND 20541 \n", "20543 INLAND 20543 \n", "20544 INLAND 20544 \n", "20563 INLAND 20563 \n", "20567 INLAND 20567 \n", "20629 INLAND 20629 \n", "\n", "[1287 rows x 11 columns]" ] }, "execution_count": 35, "metadata": {}, "output_type": "execute_result" } ], "source": [ "#df.drop(df[(df['total_rooms']high_border)].index,axis=0) - 1 РІР°СЂРёР°РЅС‚\n", "#df=df[~((df['total_rooms']high_border))] - 2 РІР°СЂРёР°РЅС‚\n", "df[(df['total_rooms']high_border)]" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РћС‚Р±РѕСЂ Рё РїРѕСЃС‚СЂРѕРµРЅРёРµ РЅРѕРІС‹С… РїСЂРёР·РЅР°РєРѕРІ" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**РСЃРєР»СЋС‡Р°РµРј РїСЂРёР·РЅР°Рє \"id\"**" ] }, { "cell_type": "code", "execution_count": 36, "metadata": {}, "outputs": [], "source": [ "df = df[df.columns[:-1]]\n", "#df.drop(['id'],axis=1,inplace=True)" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "**РџСЂРµРѕР±СЂР°Р·СѓРµРј РєР°С‚РµРіРѕСЂРёР°Р»СЊРЅС‹Р№ РїСЂРёР·РЅР°Рє \"ocean_proximity\" РІ РЅРµСЃРєРѕР»СЊРєРѕ Р±РёРЅР°СЂРЅС‹С…**" ] }, { "cell_type": "code", "execution_count": 37, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value	ocean_proximity	<1H OCEAN	INLAND	ISLAND	NEAR BAY	NEAR OCEAN
0	-122.23	37.88	41.0	880.0	129.0	322.0	126.0	8.3252	452600.0	NEAR BAY	0	0	0	1	0
1	-122.22	37.86	21.0	7099.0	1106.0	2401.0	1138.0	8.3014	358500.0	NEAR BAY	0	0	0	1	0
2	-122.24	37.85	52.0	1467.0	190.0	496.0	177.0	7.2574	352100.0	NEAR BAY	0	0	0	1	0
3	-122.25	37.85	52.0	1274.0	235.0	558.0	219.0	5.6431	341300.0	NEAR BAY	0	0	0	1	0
4	-122.25	37.85	52.0	1627.0	280.0	565.0	259.0	3.8462	342200.0	NEAR BAY	0	0	0	1	0
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms total_bedrooms \\\n", "0 -122.23 37.88 41.0 880.0 129.0 \n", "1 -122.22 37.86 21.0 7099.0 1106.0 \n", "2 -122.24 37.85 52.0 1467.0 190.0 \n", "3 -122.25 37.85 52.0 1274.0 235.0 \n", "4 -122.25 37.85 52.0 1627.0 280.0 \n", "\n", " population households median_income median_house_value ocean_proximity \\\n", "0 322.0 126.0 8.3252 452600.0 NEAR BAY \n", "1 2401.0 1138.0 8.3014 358500.0 NEAR BAY \n", "2 496.0 177.0 7.2574 352100.0 NEAR BAY \n", "3 558.0 219.0 5.6431 341300.0 NEAR BAY \n", "4 565.0 259.0 3.8462 342200.0 NEAR BAY \n", "\n", " <1H OCEAN INLAND ISLAND NEAR BAY NEAR OCEAN \n", "0 0 0 0 1 0 \n", "1 0 0 0 1 0 \n", "2 0 0 0 1 0 \n", "3 0 0 0 1 0 \n", "4 0 0 0 1 0 " ] }, "execution_count": 37, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df = pd.concat([df, pd.get_dummies(df['ocean_proximity'])], axis=1)\n", "df.head()" ] }, { "cell_type": "markdown", "metadata": {}, "source": [ "### РЎРѕС…СЂР°РЅРµРЅРёРµ СЂРµР·СѓР»СЊС‚Р°С‚РѕРІ" ] }, { "cell_type": "code", "execution_count": 38, "metadata": {}, "outputs": [ { "data": { "text/html": [ "
\n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value	ocean_proximity	<1H OCEAN	INLAND	ISLAND	NEAR BAY	NEAR OCEAN
0	-122.23	37.88	41.0	880.0	129.0	322.0	126.0	8.3252	452600.0	NEAR BAY	0	0	0	1	0
1	-122.22	37.86	21.0	7099.0	1106.0	2401.0	1138.0	8.3014	358500.0	NEAR BAY	0	0	0	1	0
2	-122.24	37.85	52.0	1467.0	190.0	496.0	177.0	7.2574	352100.0	NEAR BAY	0	0	0	1	0
3	-122.25	37.85	52.0	1274.0	235.0	558.0	219.0	5.6431	341300.0	NEAR BAY	0	0	0	1	0
4	-122.25	37.85	52.0	1627.0	280.0	565.0	259.0	3.8462	342200.0	NEAR BAY	0	0	0	1	0
\n", "
" ], "text/plain": [ " longitude latitude housing_median_age total_rooms total_bedrooms \\\n", "0 -122.23 37.88 41.0 880.0 129.0 \n", "1 -122.22 37.86 21.0 7099.0 1106.0 \n", "2 -122.24 37.85 52.0 1467.0 190.0 \n", "3 -122.25 37.85 52.0 1274.0 235.0 \n", "4 -122.25 37.85 52.0 1627.0 280.0 \n", "\n", " population households median_income median_house_value ocean_proximity \\\n", "0 322.0 126.0 8.3252 452600.0 NEAR BAY \n", "1 2401.0 1138.0 8.3014 358500.0 NEAR BAY \n", "2 496.0 177.0 7.2574 352100.0 NEAR BAY \n", "3 558.0 219.0 5.6431 341300.0 NEAR BAY \n", "4 565.0 259.0 3.8462 342200.0 NEAR BAY \n", "\n", " <1H OCEAN INLAND ISLAND NEAR BAY NEAR OCEAN \n", "0 0 0 0 1 0 \n", "1 0 0 0 1 0 \n", "2 0 0 0 1 0 \n", "3 0 0 0 1 0 \n", "4 0 0 0 1 0 " ] }, "execution_count": 38, "metadata": {}, "output_type": "execute_result" } ], "source": [ "df.head()" ] }, { "cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": [ "df.to_csv(PREPARED_DATASET_PATH, index=False, encoding='utf-8')" ] }, { "cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": [] } ], "metadata": { "kernelspec": { "display_name": "Python 3", "language": "python", "name": "python3" }, "language_info": { "codemirror_mode": { "name": "ipython", "version": 3 }, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.7.3" } }, "nbformat": 4, "nbformat_minor": 2 }
